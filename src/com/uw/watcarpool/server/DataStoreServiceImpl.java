package com.uw.watcarpool.server;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import com.googlecode.objectify.Query;
import com.google.appengine.api.datastore.QueryResultIterator;
import com.google.gwt.user.server.rpc.RemoteServiceServlet;
import com.googlecode.objectify.Objectify;
import com.googlecode.objectify.ObjectifyService;
import com.uw.watcarpool.client.DataStoreService;
import com.uw.watcarpool.client.Driver;
import com.uw.watcarpool.client.Passenger;

@SuppressWarnings("serial")
public class DataStoreServiceImpl extends RemoteServiceServlet implements
		DataStoreService {
	
	static{
	    ObjectifyService.register(Passenger.class);
	    ObjectifyService.register(Driver.class);
		}
	
	public List<Driver> checkDrivers(String kind, String name, String contact, Date date, String pickupLoc, String dropoffLoc, int spots)
			throws IllegalArgumentException {
		
        Objectify ofy = ObjectifyService.begin();
        List<Driver> ret = new ArrayList<Driver>();
		
        //First level filters
        Query<Driver> q = ofy.query(Driver.class).filter("_spots >=", spots).filter("_dropoffLoc", dropoffLoc);
		QueryResultIterator<Driver> iterator = q.iterator();

		//Second level filters	
		while (iterator.hasNext()) {
	        Driver d = iterator.next();
	        if (d._date.after(date) || d._date.equals(date))
	        {
	         ret.add(d);
	        }

		}
        
		//Return the filtered results to the client
	    if (ret.size()!=0)
	    {
	    	for (Driver d :ret)
	    	{
	    		System.out.println("------------------");
	    		System.out.println(d._contact);
	    		System.out.println(d._dropoffLoc);
	    		System.out.println(d._date.toString());

	    	}
	    	return ret;
	    	
	    }
	    else //Create a new entry in the database 
	    {
	    	
	    	Passenger passenger = new Passenger(contact, date, pickupLoc, dropoffLoc, spots);
	    	assert passenger.id != null;    // id was autogenerated
	    	ofy.put(passenger);
	    	
	    	return null;
	    	
	    }
		    
	}
	

	public List<Passenger> checkPassengers(String kind, String name, String contact, Date date, String pickupLoc, String dropoffLoc, int spots)
		{

		Objectify ofy = ObjectifyService.begin();
        List<Passenger> ret = new ArrayList<Passenger>();
		
        //First level filters
        Query<Passenger> q = ofy.query(Passenger.class).filter("_spots <=", spots).filter("_dropoffLoc", dropoffLoc);
		QueryResultIterator<Passenger> iterator = q.iterator();

		//Second level filters	
		while (iterator.hasNext()) {
	        Passenger p = iterator.next();
	        if (p._date.before(date) || p._date.equals(date))
	        {
	         ret.add(p);
	        }

		}
        
		//Return the filtered results to the client
	    if (ret.size()!=0)
	    {
	    	for (Passenger p :ret)
	    	{
	    		System.out.println("------------------");
	    		System.out.println(p._contact);
	    		System.out.println(p._dropoffLoc);
	    		System.out.println(p._date.toString());

	    	}
	    	return ret;
	    	
	    }
	    else
	    {
	    	
	    	Driver driver = new Driver(contact, date, pickupLoc, dropoffLoc, spots);
	    	assert driver.id != null;    // id was autogenerated
	    	ofy.put(driver);
	    	return null;
	    	
	    }
	}


      
		
		
		
        
	
	
	
}
